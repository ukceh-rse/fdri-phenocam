# Simple workflow for deploying static content to GitHub Pages
name: Documentation Deployment

on:
  workflow_call:
    inputs:
      pages_artifact_name:
        description: "Keyword of the pages artifact"
        required: true
        type: string
        

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  check-pages:
    runs-on: ubuntu-latest
    outputs:
      pages_enabled: ${{ steps.check.outputs.pages_enabled }}
    steps:
      - name: Check if GitHub Pages is enabled
        id: check
        run: |
          PAGES_URL=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/pages | jq -r '.html_url')
          if [ "$PAGES_URL" == "null" ]; then
            echo "pages_enabled=false" >> $GITHUB_OUTPUT
          else
            echo "pages_enabled=true" >> $GITHUB_OUTPUT
          fi
          
  deploy:
    needs: check-pages
    if: ${{ needs.check-pages.outputs.pages_enabled == 'true' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Download pages artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.pages_artifact_name }}
          path: ./
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: ./
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4